{"version":3,"sources":["Manga/MangaList.js","Manga/manga.js","Novel/novel.js","App.js","serviceWorker.js","index.js"],"names":["MangaDetail","post","this","props","Row","Col","xs","Card","className","target","href","url","src","cover","alt","title","icon","faEdit","author","faPalette","artist","description","React","Component","Manga","Data","map","item","index","key","Body","App","basename","Container","faBook","class","to","exact","path","component","Mangadex","Webtoon","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4/WA+CeA,E,iLAvCD,IACEC,EAASC,KAAKC,MAAdF,KACR,OACI,oCACI,kBAACG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,IAEL,kBAACC,EAAA,EAAD,KACI,kBAACH,EAAA,EAAD,CAAKI,UAAU,cACX,kBAACH,EAAA,EAAD,CAAKC,GAAI,GACL,uBAAGG,OAAO,SAASC,KAAMT,EAAKU,KAC1B,yBAAKC,IAAKX,EAAKY,MAAOL,UAAU,0BAA0BM,IAAI,gBAGtE,kBAACT,EAAA,EAAD,KACI,yBAAKG,UAAU,mBACX,uBAAGA,UAAU,gCAAgCP,EAAKc,OAClD,yBAAKP,UAAU,mBACX,uBAAGA,UAAU,yBAAb,IAAsC,kBAAC,IAAD,CAAiBQ,KAAMC,MAA7D,IAAyEhB,EAAKiB,OAA9E,KACA,uBAAGV,UAAU,yBAAb,OACA,uBAAGA,UAAU,yBAAb,IAAsC,kBAAC,IAAD,CAAiBQ,KAAMG,MAA7D,IAA4ElB,EAAKmB,OAAjF,MAEJ,uBAAGZ,UAAU,yBAAyBP,EAAKoB,mBAUnE,kC,GAjCUC,IAAMC,WCYjBC,E,iLAbP,OACI,oCACKC,EAAKC,KAAI,SAACC,EAAMC,GACb,OACI,kBAAC,EAAD,CAAa3B,KAAM0B,EAAME,IAAG,wBAAmBD,a,GANnDN,IAAMC,WCoBXC,E,iLAjBP,OACI,kBAACpB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACL,kBAACC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKuB,KAAN,2B,GANJR,IAAMC,WCoEXQ,E,iLA5DX,OACE,kBAAC,IAAD,CAAYC,SAAS,KACnB,kBAACC,EAAA,EAAD,KACE,yBAAKzB,UAAU,YACf,kBAACJ,EAAA,EAAD,CAAKI,UAAU,qBACb,kBAACH,EAAA,EAAD,CAAKC,GAAI,IACP,4BAAI,kBAAC,IAAD,CAAiBU,KAAMkB,MAA3B,YACA,6CAGJ,6BACA,kBAAC9B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,IAEP,kBAACC,EAAA,EAAD,KACE,kBAACH,EAAA,EAAD,CAAKI,UAAU,cACb,kBAACH,EAAA,EAAD,CAAKC,GAAI,GAAT,IAAa,uBAAGG,OAAO,SAASC,KAAK,oCACnC,yBAAKE,IAAI,0DAA0DJ,UAAU,0BAA0BM,IAAI,cADhG,OAGb,kBAACT,EAAA,EAAD,KACE,yBAAKG,UAAU,mBACb,uBAAG2B,MAAM,gCAAT,8BACA,uBAAGA,MAAM,yBAAT,YACA,uBAAG3B,UAAU,yBAAb,oLAeZ,6BACA,kBAACJ,EAAA,EAAD,CAAKI,UAAU,SACb,kBAACH,EAAA,EAAD,CAAKG,UAAU,kCACb,kBAAC,IAAD,CAAM4B,GAAG,IAAI5B,UAAU,YAAvB,YACA,kBAAC,IAAD,CAAM4B,GAAG,WAAW5B,UAAU,YAA9B,aAGJ,6BACA,6BAEA,kBAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,WAAWC,UAAWE,U,GAnDhCnB,IAAMC,WCCJmB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCRNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.6eaa3bff.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Col, Row, Card } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPalette } from '@fortawesome/free-solid-svg-icons';\r\nimport { faEdit } from '@fortawesome/free-regular-svg-icons';\r\n\r\n\r\nclass MangaDetail extends React.Component {\r\n    render() {\r\n        const { post } = this.props\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col xs={12}>\r\n\r\n                        <Card>\r\n                            <Row className=\"no-gutters\">\r\n                                <Col xs={4}>\r\n                                    <a target=\"_blank\" href={post.url}>\r\n                                        <img src={post.cover} className=\"img-fluid img-last-read\" alt=\"last-read\" />\r\n                                    </a>\r\n                                </Col>\r\n                                <Col>\r\n                                    <div className=\"card-block px-2\">\r\n                                        <p className=\"card-title p-last-read-Title\">{post.title}</p>\r\n                                        <div className=\"d-flex flex-row\">\r\n                                            <p className=\"card-text p-last-read\"> <FontAwesomeIcon icon={faEdit} /> {post.author} </p>\r\n                                            <p className=\"card-text p-last-read\" > | </p>\r\n                                            <p className=\"card-text p-last-read\"> <FontAwesomeIcon icon={faPalette} /> {post.artist} </p>\r\n                                        </div>\r\n                                        <p className=\"card-text p-last-read\">{post.description}</p>\r\n\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card>\r\n\r\n\r\n                    </Col>\r\n                </Row>\r\n                <br />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default MangaDetail;\r\n","import React from 'react';\r\nimport Data from '../data/mangaData.json';\r\nimport MangaDetail from './MangaList';\r\n\r\nclass Manga extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                {Data.map((item, index) => {\r\n                    return (\r\n                        <MangaDetail post={item} key={`post-list-key ${index}`} />\r\n                    )\r\n                })}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Manga;\r\n","import React from 'react';\r\nimport { HashRouter, Route, Link } from \"react-router-dom\";\r\nimport '../css/App.css';\r\nimport { Container, Col, Row, Card, Nav, } from 'react-bootstrap';\r\n\r\nclass Manga extends React.Component {\r\n    render() {\r\n        return (\r\n            <Row >\r\n                <Col xs={12}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            Novel Title\r\n          </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Manga;\r\n","import React from 'react';\nimport { HashRouter, Route, Link } from \"react-router-dom\";\nimport './css/App.css';\nimport { Container, Col, Row, Card } from 'react-bootstrap';\nimport Mangadex from './Manga/manga';\nimport Webtoon from './Novel/novel';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBook } from '@fortawesome/free-solid-svg-icons';\n\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <HashRouter basename='/'>\n        <Container>\n          <div className=\"default\"></div>\n          <Row className=\"web-headline mb-3\">\n            <Col xs={12}>\n              <h3><FontAwesomeIcon icon={faBook} /> Webtoon</h3>\n              <h3>Collection.</h3>\n            </Col>\n          </Row>\n          <br />\n          <Row>\n            <Col xs={12}>\n\n              <Card>\n                <Row className=\"no-gutters\">\n                  <Col xs={4}> <a target=\"_blank\" href=\"https://mangadex.org/title/45166\">\n                    <img src=\"https://mangadex.org/images/manga/45166.jpeg?1580664748\" className=\"img-fluid img-last-read\" alt=\"last-read\" />  </a>\n                  </Col>\n                  <Col>\n                    <div className=\"card-block px-2\">\n                      <p class=\"card-title p-last-read-Title\"> Virtues of the Villainess</p>\n                      <p class=\"card-text p-last-read\">last add</p>\n                      <p className=\"card-text p-last-read\">The “villainess” Ginger, who now knows Prince Ivana’s deepest secret (thanks to the novel), attempts to seduce him with -2% cautiousness and 200% cuteness!</p>\n\n                    </div>\n                  </Col>\n                </Row>\n              </Card>\n\n\n            </Col>\n\n\n\n          </Row>\n\n\n          <br />\n          <Row className=\"mt-2 \">\n            <Col className=\"d-flex justify-content-between\">\n              <Link to=\"/\" className=\"nav-link\">Mangadex</Link>\n              <Link to=\"/webtoon\" className=\"nav-link\">Webtoon</Link>\n            </Col>\n          </Row>\n          <hr />\n          <br />\n\n          <Route exact path=\"/\" component={Mangadex} />\n          <Route exact path=\"/webtton\" component={Webtoon} />\n\n        </Container>\n      </HashRouter >\n\n\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}